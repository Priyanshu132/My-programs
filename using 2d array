#include<stdio.h> 
int main() 
{ 
 int a[50][50],b[50][50],c[50][50],m1,n1,m2,n2,i,j,k; 
  printf("enter the order of the the matric A\n"); 
  scanf("%d%d",&m1,&n1);    //m1=no of rows in matric A , n1=no of column in matric A. 
 printf("enter the Elements of the the matric A\n"); 
  for(i=0;i<m1;i++){ 
 for(j=0;j<n1;j++){ 
  scanf("%d",&a[i][j]); 
  } 
 } 
  printf("enter the order of the the matric B\n"); 
  scanf("%d%d",&m2,&n2);          //m2=no of rows in matric B , n2=no of column in matric B. 
  printf("enter the Elements of the the matric B\n"); 
  for(i=0;i<m2;i++){ 
 for(j=0;j<n2;j++){ 
  scanf("%d",&b[i][j]); 
  } 
 } 
      
  if(n1==n2 && m2==m1){    // for Addition
  printf("\nthe Addition of given matrix is: \n"); 
  for(i=0;i<m1;i++){ 
 for(j=0;j<n1;j++){ 
  c[i][j]=a[i][j]+b[i][j]; 
  printf("%d ",c[i][j]); 
  } 
         printf("\n"); 
 } 
   
 } 
 else 
 printf("\nAddition can't be possible\n\n"); 
  
  if(n1==n2 && m2==m1){       // for Subtraction 
     printf("\nthe Subtraction of given matrix is: \n");
  for(i=0;i<m1;i++){ 
 for(j=0;j<n1;j++){ 
  c[i][j]=a[i][j]-b[i][j]; 
  printf("%d ",c[i][j]); 
  } 
        printf("\n"); 
 } 
   
 } 
 else 
 printf("\nSubtraction can't be possible\n\n"); 
              if(n1==m2){        // for Multiplication 
              printf("\nthe multiplication of given matrix is: \n");
    for(i=0;i<m1;i++){ 
 for(j=0;j<n1;j++){ 
       c[i][j]=0; 
         for(k=0;k<m2;k++){ 
  c[i][j]=a[i][k]*b[k][j]+c[i][j]; 
     
 } 
 
} 
} 
for(i=0;i<m1;i++) 
{ 
for(j=0;j<n1;j++){ 
printf("%d ",c[i][j]); 
} 
printf("\n"); 
} 
} 
else 
printf("\nmultiplication can't be possible\n\n "); 
 printf("\nthe Transpose of matrix A is: \n");
 for(i=0;i<m1;i++){ 
   for(j=0;j<n1;j++){ 
 c[j][i]=a[i][j]; 
} 
} 
 for(i=0;i<n1;i++){ 
   for(j=0;j<m1;j++){ 
 printf("%d ",c[i][j]); 
} 
printf("\n"); 
}
printf("\nthe Transpose of matrix B is: \n");
 for(i=0;i<m2;i++){ 
   for(j=0;j<n2;j++){ 
 c[j][i]=a[i][j]; 
} 
} 
 for(i=0;i<n2;i++){ 
   for(j=0;j<m2;j++){ 
 printf("%d ",c[i][j]); 
} 
printf("\n"); 
} 
return 0;
} 
